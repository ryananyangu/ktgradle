name: "Kotlin CI/CD Tests"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types:
      - submitted
      - closed

jobs:
    build:

      name: Test and Build
      runs-on: ubuntu-latest


      steps:

      - name: Code Checkout
        uses: actions/checkout@v3


      - name: Run ktlint with reviewdog
        uses: ScaCap/action-ktlint@1.4
        with:
          # GITHUB_TOKEN
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Report level for reviewdog [info,warning,error]
          level: info
          reporter: github-pr-check
          # Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
          # Default is added.

          filter_mode: added
          # Exit code for reviewdog when errors are found [true,false]
          # Default is `false`.
          fail_on_error: true


      - name: Compute release hash
        id: release_hash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: echo Job env vars
        run: |
          echo ${GITHUB_HEAD_REF}
          echo ${{github.base_ref}}
          echo ${{github.ref}}
          echo ${{ steps.release_hash.outputs.sha_short }}

      - name: Running Test and Build
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - run: ./gradlew clean build --no-daemon


      - name: Adding test coverage Report
        id: jacoco
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60

      - name: Docker Build & Push Action
        uses: mr-smithers-excellent/docker-build-push@v5.8
        if: github.event_name == 'pull_request' && github.event.action == 'closed' # Only build image if the PR has actually been closed
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/demoapp
          tags: ${{ steps.release_hash.outputs.sha_short }}
          registry: docker.io
          dockerfile: Dockerfile.ci
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          pushImage: true